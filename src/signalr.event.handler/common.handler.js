require("dotenv").config();const{SESSION_ID:SESSION_ID}=process.env,{waitFor:waitFor,asyncForEach:asyncForEach}=require("../common/common.util"),path=require("path"),fs=require("fs"),onSetOnlineStatusHandler=async(e,n)=>{try{const s=JSON.parse(e),{sessionId:i,state:t}=s;if(i!==SESSION_ID)return;await n.sendPresenceUpdate(t?"available":"unavailable")}catch(e){console.log(`ex: ${e}`)}},onVerifyWANumberHandler=async(e,n,s)=>{const{signalRClient:i,serverHub:t}=require("../signalr/signalr.util"),o=JSON.parse(e);let a=[];await asyncForEach(o,async e=>{const{phoneNumber:n,sessionId:o}=e;if(o===SESSION_ID){const[e]=await s.onWhatsApp(n);if(e&&e.exists){const e={id:n,name:"Verified",sessionId:SESSION_ID};a.push(e),100===a.length&&(i.connection.hub.invoke(t,"ReceiveContacts",JSON.stringify({contacts:a,sessionId:SESSION_ID})),a=[])}else{const e={id:n,name:"Not verified",sessionId:SESSION_ID};a.push(e),100===a.length&&(i.connection.hub.invoke(t,"ReceiveContacts",JSON.stringify({contacts:a,sessionId:SESSION_ID})),a=[])}}}),a.push({id:"status@broadcast"}),i.connection.hub.invoke(t,"ReceiveContacts",JSON.stringify({contacts:a,sessionId:SESSION_ID}))},onGetBusinessProfileHandler=async(e,n)=>{const{signalRClient:s,serverHub:i}=require("../signalr/signalr.util"),t=JSON.parse(e);let o=[];await asyncForEach(t,async e=>{const{phoneNumber:t,sessionId:a}=e;if(a===SESSION_ID){const e=await n.getBusinessProfile(t);e&&o.push(e),50===o.length&&(s.connection.hub.invoke(i,"ReceiveBusinessProfiles",JSON.stringify({businessProfiles:o,sessionId:SESSION_ID})),o=[])}}),o.push({wid:"status@broadcast"}),s.connection.hub.invoke(i,"ReceiveBusinessProfiles",JSON.stringify({businessProfiles:o,sessionId:SESSION_ID}))},onDisconnectHandler=async(e,n)=>{const{signalRClient:s}=require("../signalr/signalr.util"),i=JSON.parse(e),{sessionId:t}=i;if(t===SESSION_ID)try{n.end("Normal close"),s.end()}catch(e){console.log(`ex: ${e}`)}finally{setTimeout(()=>process.exit(),500)}},onLogoutHandler=async(e,n)=>{const{signalRClient:s}=require("../signalr/signalr.util"),i=JSON.parse(e),{sessionId:t}=i;if(t===SESSION_ID)try{await n.logout(),s.end()}catch(e){console.log(`ex: ${e}`)}finally{setTimeout(()=>process.exit(),500)}},onGetCurrentStateHandler=async(e,n)=>{const{signalRClient:s,serverHub:i}=require("../signalr/signalr.util"),t=JSON.parse(e),{sessionId:o}=t;if(o===SESSION_ID)try{s.connection.hub.invoke(i,"ChangeState",JSON.stringify({state:n,sessionId:SESSION_ID}))}catch(e){console.log(`ex: ${e}`)}};module.exports={onSetOnlineStatusHandler:onSetOnlineStatusHandler,onVerifyWANumberHandler:onVerifyWANumberHandler,onGetBusinessProfileHandler:onGetBusinessProfileHandler,onDisconnectHandler:onDisconnectHandler,onLogoutHandler:onLogoutHandler,onGetCurrentStateHandler:onGetCurrentStateHandler};