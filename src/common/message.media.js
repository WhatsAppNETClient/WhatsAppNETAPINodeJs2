"use strict";const fs=require("fs"),path=require("path"),mime=require("mime"),fetch=require("node-fetch"),{URL:URL}=require("url");class MessageMedia{constructor(e,t,a){this.mimetype=e,this.data=t,this.filename=a}static fromFilePath(e){const t=fs.readFileSync(e),a=mime.getType(e),i=path.basename(e);return new MessageMedia(a,t,i)}static async fromUrl(e,t={}){const a=new URL(e);let i=mime.getType(a.pathname);if(!i&&!t.unsafeMime)throw new Error("Unable to determine MIME type using URL. Set unsafeMime to true to download it anyway.");const n=await async function(e,t){const a=Object.assign({headers:{accept:"image/* video/* text/* audio/*"}},t),i=await fetch(e,a),n=i.headers.get("Content-Type"),s=i.headers.get("Content-Disposition"),r=s?s.match(/((?<=filename=")(.*)(?="))/):null;let m=void 0;return i.buffer&&(m=await i.buffer()),{data:m,mime:n,name:r}}(e,t.reqOptions),s=t.filename||(n.name?n.name[0]:a.pathname.split("/").pop()||"file");return i||(i=n.mime),new MessageMedia(i,n.data,s)}}module.exports=MessageMedia;