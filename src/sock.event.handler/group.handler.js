require("dotenv").config();const{SESSION_ID:SESSION_ID}=process.env,{addEditContact:addEditContact,getContactById:getContactById}=require("../db.repository/contacts.repository"),{signalRClient:signalRClient,serverHub:serverHub}=require("../signalr/signalr.util"),createGroupContact=t=>{return{id:t.id?t.id:"",name:t.subject?t.subject:"",pushname:"",verifiedname:"",isgroup:1}},groupsUpsert=async t=>{for(const e of t){const t=createGroupContact(e);if(t)try{console.log("add group contact"),await addEditContact(t)}catch(t){console.log(`call groupsUpsert::ex: ${t}`)}}},groupsParticipantsUpdate=async t=>{const e="add"===t.action?"GroupJoin":"GroupLeave";let o=void 0;try{o=await getContactById(t.id)}catch(t){console.log(`ex: ${t}`)}console.log(`groupInfo: ${JSON.stringify(o)}`);let a={id:o.id?o.id:"",name:o.name?o.name:"",recipients:void 0},i=[];for(const e of t.participants){let t=void 0;try{t=await getContactById(e)}catch(t){console.log(`ex: ${t}`)}let o=void 0;o=t?{id:t.id?t.id:"",name:t.name?t.name:"",shortName:"",pushname:t.pushName?t.pushName:""}:{id:e,name:"",shortName:"",pushname:""},i.push(o)}a.recipients=i,signalRClient.connection.hub.invoke(serverHub,e,JSON.stringify({groupNotification:a,sessionId:SESSION_ID}))};module.exports={groupsParticipantsUpdate:groupsParticipantsUpdate,groupsUpsert:groupsUpsert};